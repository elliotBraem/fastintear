{
  "version": 3,
  "sources": ["../../src/utils.ts"],
  "sourcesContent": ["import {\n  binary_to_base58 as toBase58,\n  base58_to_binary as fromBase58,\n} from \"base58-js\";\nimport Big from \"big.js\";\nimport { encode, decode } from 'js-base64';\n\nexport { toBase58, fromBase58 };\n\nconst LsPrefix = \"__fastnear_\";\n\nexport function toBase64(data) {\n  if (typeof data === 'string') {\n    return encode(data);\n  } else {\n    const bytes = data instanceof Uint8Array ? data : new Uint8Array(data);\n    const str = String.fromCharCode(...bytes);\n    return encode(str);\n  }\n}\n\nexport function fromBase64(str) {\n  const binaryString = decode(str);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes;\n}\n\nexport function lsSet(key, value) {\n  if (value === null || value === undefined) {\n    localStorage.removeItem(LsPrefix + key);\n  } else {\n    localStorage.setItem(LsPrefix + key, JSON.stringify(value));\n  }\n}\n\nexport function lsGet(key) {\n  const value = localStorage.getItem(LsPrefix + key);\n  return tryParseJson(value, null);\n}\n\nexport function deepCopy(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nexport function tryParseJson(...args) {\n  try {\n    return JSON.parse(args[0]);\n  } catch {\n    if (args.length > 1) {\n      return args[1];\n    }\n    return args[0];\n  }\n}\n\nexport function canSignWithLAK(actions) {\n  return (\n    actions.length === 1 &&\n    actions[0].type === \"FunctionCall\" &&\n    Big(actions[0]?.deposit ?? \"0\").eq(0)\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAAA;AAAA,EAAA;AAAA;AAAA;AAAA,mCAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA,uBAGO;AACP,iBAAgB;AAChB,uBAA+B;AAI/B,IAAM,WAAW;AAEV,SAAS,SAAS,MAAM;AAC7B,MAAI,OAAO,SAAS,UAAU;AAC5B,eAAO,yBAAO,IAAI;AAAA,EACpB,OAAO;AACL,UAAM,QAAQ,gBAAgB,aAAa,OAAO,IAAI,WAAW,IAAI;AACrE,UAAM,MAAM,OAAO,aAAa,GAAG,KAAK;AACxC,eAAO,yBAAO,GAAG;AAAA,EACnB;AACF;AAEO,SAAS,WAAW,KAAK;AAC9B,QAAM,mBAAe,yBAAO,GAAG;AAC/B,QAAM,MAAM,aAAa;AACzB,QAAM,QAAQ,IAAI,WAAW,GAAG;AAChC,WAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,UAAM,CAAC,IAAI,aAAa,WAAW,CAAC;AAAA,EACtC;AACA,SAAO;AACT;AAEO,SAAS,MAAM,KAAK,OAAO;AAChC,MAAI,UAAU,QAAQ,UAAU,QAAW;AACzC,iBAAa,WAAW,WAAW,GAAG;AAAA,EACxC,OAAO;AACL,iBAAa,QAAQ,WAAW,KAAK,KAAK,UAAU,KAAK,CAAC;AAAA,EAC5D;AACF;AAEO,SAAS,MAAM,KAAK;AACzB,QAAM,QAAQ,aAAa,QAAQ,WAAW,GAAG;AACjD,SAAO,aAAa,OAAO,IAAI;AACjC;AAEO,SAAS,SAAS,KAAK;AAC5B,SAAO,KAAK,MAAM,KAAK,UAAU,GAAG,CAAC;AACvC;AAEO,SAAS,gBAAgB,MAAM;AACpC,MAAI;AACF,WAAO,KAAK,MAAM,KAAK,CAAC,CAAC;AAAA,EAC3B,QAAQ;AACN,QAAI,KAAK,SAAS,GAAG;AACnB,aAAO,KAAK,CAAC;AAAA,IACf;AACA,WAAO,KAAK,CAAC;AAAA,EACf;AACF;AAEO,SAAS,eAAe,SAAS;AACtC,SACE,QAAQ,WAAW,KACnB,QAAQ,CAAC,EAAE,SAAS,sBACpB,WAAAC,SAAI,QAAQ,CAAC,GAAG,WAAW,GAAG,EAAE,GAAG,CAAC;AAExC;",
  "names": ["fromBase58", "toBase58", "Big"]
}
